<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数字图像处理之错切问题</title>
      <link href="2020/11/01/shu-zi-tu-xiang-chu-li-ke-cheng-zuo-ye/"/>
      <url>2020/11/01/shu-zi-tu-xiang-chu-li-ke-cheng-zuo-ye/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><img src="%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A%5C%E5%9B%BE1.PNG" alt="图1"></p><h2 id="修正原理"><a href="#修正原理" class="headerlink" title="修正原理"></a>修正原理</h2><p><img src="%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A%5C%E5%9B%BE2.PNG" alt="图2"></p><h2 id="MATLAB代码实现"><a href="#MATLAB代码实现" class="headerlink" title="MATLAB代码实现"></a>MATLAB代码实现</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">Stamp</span><span class="token punctuation">(</span>Origin_path<span class="token punctuation">,</span> Need_to_fix_picture_path<span class="token punctuation">)</span><span class="token comment">%% 本函数用于修正印章的错切问题</span><span class="token comment">% Input:</span><span class="token comment">%    Origin_path:原始理想图的存放路径</span><span class="token comment">%    Need_to_fix_picture_path：待修复的图存放路径</span>    <span class="token comment">% 手动映射采点</span>    bad<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">285</span><span class="token punctuation">,</span><span class="token number">165</span><span class="token punctuation">;</span>        <span class="token number">170</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">;</span>        <span class="token number">265</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">;</span>        <span class="token number">294</span><span class="token punctuation">,</span><span class="token number">133</span><span class="token punctuation">;</span>        <span class="token number">81</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">;</span>        <span class="token number">240</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">;</span>        <span class="token number">220</span><span class="token punctuation">,</span><span class="token number">119</span><span class="token punctuation">;</span>        <span class="token number">79</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">;</span>        <span class="token number">148</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    good<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">205</span><span class="token punctuation">,</span><span class="token number">167</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">139</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">216</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">231</span><span class="token punctuation">,</span><span class="token number">133</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">211</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">163</span><span class="token punctuation">,</span><span class="token number">119</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">119</span><span class="token punctuation">,</span><span class="token number">61</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">% 回归得到错切修正系数</span>    Parameter_X<span class="token operator">=</span><span class="token function">regress</span><span class="token punctuation">(</span><span class="token function">bad</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>good<span class="token punctuation">)</span><span class="token punctuation">;</span>    Parameter_Y<span class="token operator">=</span><span class="token function">regress</span><span class="token punctuation">(</span><span class="token function">bad</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>good<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">% 载入错切后图片与原图片,并显示</span>    picture<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span>Need_to_fix_picture_path<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">% 错切图存放地址</span>    Shape<span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>picture<span class="token punctuation">)</span><span class="token punctuation">;</span>    target<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span>Origin_path<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">% 原始图存放地址</span>    target_size<span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span>picture<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'Need to fix'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'target'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">% 根据原图和错切图建立映射，修复错切问题</span>    Store_Matrix<span class="token operator">=</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token function">target_size</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">target_size</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">255</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> channel<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">3</span>        <span class="token keyword">for</span> x<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">target_size</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> y<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">target_size</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>Parameter_X<span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token function">Shape</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token keyword">end</span>                <span class="token keyword">if</span> <span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>Parameter_Y<span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token function">Shape</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token keyword">end</span>                <span class="token function">Store_Matrix</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>channel<span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">picture</span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>Parameter_X<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>Parameter_Y<span class="token punctuation">)</span><span class="token punctuation">,</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">end</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span>        <span class="token comment">% 显示修复后结果</span>    Store_Matrix<span class="token operator">=</span><span class="token function">uint8</span><span class="token punctuation">(</span>Store_Matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span>Store_Matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'fixed picture'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修正结果"><a href="#修正结果" class="headerlink" title="修正结果"></a>修正结果</h2><p><img src="%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A%5C%E5%9B%BE3.png" alt="图3"></p>]]></content>
      
      
      <categories>
          
          <category> 数字图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> 数字图像处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VHDL语言入门</title>
      <link href="2020/07/11/vhdl-yu-yan-ru-men/"/>
      <url>2020/07/11/vhdl-yu-yan-ru-men/</url>
      
        <content type="html"><![CDATA[<h2 id="语言描述法"><a href="#语言描述法" class="headerlink" title="语言描述法"></a>语言描述法</h2><h3 id="1-结构描述法"><a href="#1-结构描述法" class="headerlink" title="1. 结构描述法"></a>1. 结构描述法</h3><p>这种方法的前提是知道逻辑函数的表达式。下面以2位比较器为例子来进一步说明。</p><pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl">AeqB<span class="token operator">&lt;=</span><span class="token function">NOT</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">XOR</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">OR</span> <span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">XOR</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">OR</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">XOR</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">OR</span> <span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">XOR</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-行为描述法"><a href="#2-行为描述法" class="headerlink" title="2. 行为描述法"></a>2. 行为描述法</h3><p>这种方法从功能上进行编程，效率非常高。</p><pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl">AeqB<span class="token operator">&lt;=</span><span class="token number">'1'</span> <span class="token keyword">WHEN</span> a<span class="token operator">=</span>b <span class="token keyword">ELSE</span> <span class="token number">'0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ol><li>BIT:位类型，其值只能为‘0’或‘1’。</li><li>Std_Logic标准逻辑类型。</li></ol><p>(1).可以代替BIT和BIT_VECTOR(多位)。</p><p>(2).电路中存在三态逻辑必须用STD_LOGIC和STD_LOGIC_VECTOR。</p><p>(3)在使用Std_Logic数据类型时必须声明库和程序包说明语句：</p><pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl"><span class="token constant">LIBRARY</span> ieee<span class="token punctuation">;</span><span class="token constant">USE</span> ieee<span class="token punctuation">.</span>std_logic_1164<span class="token punctuation">.</span><span class="token keyword">ALL</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><table><thead><tr><th>运算符</th><th>功能</th><th>运算符</th><th>功能</th></tr></thead><tbody><tr><td>+</td><td>加</td><td>SLL</td><td>逻辑左移</td></tr><tr><td>-</td><td>减</td><td>SRL</td><td>逻辑右移</td></tr><tr><td>*</td><td>乘</td><td>SLA</td><td>算术左移</td></tr><tr><td>/</td><td>除</td><td>SRA</td><td>算术右移</td></tr><tr><td>**</td><td>乘方</td><td>ROL</td><td>逻辑循环左移</td></tr><tr><td>MOD</td><td>取模</td><td>ROR</td><td>逻辑循环右移</td></tr><tr><td>REM</td><td>取余</td><td>ABS</td><td>取绝对值</td></tr></tbody></table><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><table><thead><tr><th align="left">运算符</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">AND</td><td align="left">与</td></tr><tr><td align="left">OR</td><td align="left">或</td></tr><tr><td align="left">NAND</td><td align="left">与非</td></tr><tr><td align="left">NOR</td><td align="left">或非</td></tr><tr><td align="left">XOR</td><td align="left">亦或</td></tr><tr><td align="left">XNOR</td><td align="left">亦或非</td></tr><tr><td align="left">NOT</td><td align="left">非</td></tr></tbody></table><h2 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h2><table><thead><tr><th>运算符</th><th>功能</th></tr></thead><tbody><tr><td>+</td><td>正</td></tr><tr><td>-</td><td>负</td></tr><tr><td>&amp;</td><td>并置</td></tr></tbody></table><h2 id="VHDL程序基本结构"><a href="#VHDL程序基本结构" class="headerlink" title="VHDL程序基本结构"></a>VHDL程序基本结构</h2><pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl"><span class="token constant">LIBRARY</span> ieee<span class="token punctuation">;</span><span class="token constant">USE</span> ieee<span class="token punctuation">.</span>std_logic_1164<span class="token punctuation">.</span><span class="token keyword">ALL</span><span class="token punctuation">;</span>    <span class="token comment">--库说明</span><span class="token keyword">ENTITY</span> mux21 <span class="token keyword">IS</span>                 <span class="token comment">--实体说明</span>    <span class="token keyword">PORT</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> B<span class="token punctuation">,</span> SEL<span class="token punctuation">:</span><span class="token keyword">IN</span> STD_LOGIC<span class="token punctuation">;</span>        Y<span class="token punctuation">:</span><span class="token keyword">OUT</span> STD_LOGIC<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">END</span> mux21<span class="token punctuation">;</span><span class="token keyword">ARCHITECTURE</span> one <span class="token keyword">OF</span> mux21 <span class="token keyword">IS</span>     <span class="token comment">--结构体说明</span>    <span class="token keyword">BEGIN</span>Y<span class="token operator">&lt;=</span><span class="token punctuation">(</span>A <span class="token operator">AND</span> <span class="token operator">NOT</span> SEL<span class="token punctuation">)</span> <span class="token operator">OR</span> <span class="token punctuation">(</span>B <span class="token operator">AND</span> SEL<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">END</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="并行语句"><a href="#并行语句" class="headerlink" title="并行语句"></a>并行语句</h2><ol><li>布尔表达式<pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl">Y<span class="token operator">&lt;=</span><span class="token punctuation">(</span>A <span class="token operator">AND</span> <span class="token punctuation">(</span><span class="token operator">NOT</span> S<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">OR</span> <span class="token punctuation">(</span>B <span class="token operator">AND</span> S<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>条件信号赋值语句<pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl">X<span class="token operator">&lt;=</span> a <span class="token keyword">when</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token operator">=</span><span class="token vhdl-vectors number">"00"</span><span class="token punctuation">)</span> <span class="token keyword">else</span>    b <span class="token keyword">when</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token operator">=</span><span class="token vhdl-vectors number">"01"</span><span class="token punctuation">)</span> <span class="token keyword">else</span>    c <span class="token keyword">when</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token operator">=</span><span class="token vhdl-vectors number">"10"</span><span class="token punctuation">)</span> <span class="token keyword">else</span>    d<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>选择信号赋值语句<pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl"><span class="token keyword">WITH</span> s <span class="token keyword">SELECT</span>X<span class="token operator">&lt;=</span> a <span class="token keyword">WHEN</span><span class="token vhdl-vectors number">"00"</span><span class="token punctuation">,</span>    b <span class="token keyword">WHEN</span><span class="token vhdl-vectors number">"01"</span><span class="token punctuation">,</span>    c <span class="token keyword">WHEN</span><span class="token vhdl-vectors number">"10"</span><span class="token punctuation">,</span>    d <span class="token keyword">WHEN</span> <span class="token keyword">OTHERS</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>进程语句<pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl"><span class="token comment">--D触发器上升沿触发</span><span class="token keyword">ARCHITECTURE</span> one <span class="token keyword">OF</span> dff <span class="token keyword">IS</span> <span class="token keyword">BEGIN</span>  <span class="token keyword">PROCESS</span><span class="token punctuation">(</span>clk<span class="token punctuation">)</span>   <span class="token keyword">BEGIN</span>    <span class="token keyword">IF</span> clk<span class="token keyword">'event</span> <span class="token operator">AND</span> clk<span class="token operator">=</span><span class="token number">'1'</span> <span class="token keyword">THEN</span>        q<span class="token operator">&lt;=</span>d<span class="token punctuation">;</span>    <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>  <span class="token keyword">END</span> <span class="token keyword">PROCESS</span><span class="token punctuation">;</span><span class="token keyword">END</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl"><span class="token comment">--D锁存器</span><span class="token keyword">PROCESS</span><span class="token punctuation">(</span>oe<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token keyword">BEGIN</span>    <span class="token keyword">IF</span> oe<span class="token operator">=</span><span class="token number">'1'</span> <span class="token keyword">THEN</span>        y<span class="token operator">&lt;=</span>a<span class="token punctuation">;</span>    <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">PROCESS</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>顺序语句</li></ol><p>每一条顺序语句的执行顺序是和它们的书写顺序是一致的。它只能出现在进程，函数和过程中。</p><p>（1）顺序赋值语句</p><p>变量赋值目标：=赋值源</p><p>信号赋值目标：&lt;=赋值源</p><p>（2）IF语句</p><pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl"><span class="token keyword">IF</span> 条件句 <span class="token keyword">THEN</span>    顺序语句<span class="token keyword">ELSE</span>    顺序语句<span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token comment">----------------------------</span><span class="token keyword">IF</span> 条件句 <span class="token keyword">THEN</span>    顺序语句   <span class="token keyword">ELSIF</span> 条件句 <span class="token keyword">THEN</span>    顺序语句   <span class="token keyword">ELSE</span>    顺序语句<span class="token keyword">END</span> <span class="token keyword">IF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(3)CASE_WHEN语句</p><pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl"><span class="token keyword">CASE</span> 表达式 <span class="token keyword">IS</span>    <span class="token keyword">WHEN</span> 选择值<span class="token operator">=</span><span class="token operator">&gt;</span>顺序语句；    ………    <span class="token keyword">WHEN</span> 选择值<span class="token operator">=</span><span class="token operator">&gt;</span>顺序语句；    <span class="token punctuation">[</span><span class="token keyword">WHEN</span> <span class="token keyword">OTHERS</span><span class="token operator">=</span><span class="token operator">&gt;</span>顺序语句；<span class="token punctuation">]</span><span class="token keyword">END</span> <span class="token keyword">CASE</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面以四选一数据选择器为例：</p><pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl">mux4_1<span class="token punctuation">:</span><span class="token keyword">PROCESS</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>s<span class="token punctuation">)</span>    <span class="token keyword">BEGIN</span>        <span class="token keyword">CASE</span> s <span class="token keyword">IS</span>            <span class="token keyword">WHEN</span><span class="token vhdl-vectors number">"00"</span><span class="token operator">=</span><span class="token operator">&gt;</span> x<span class="token operator">&lt;=</span>a<span class="token punctuation">;</span>            <span class="token keyword">WHEN</span><span class="token vhdl-vectors number">"01"</span><span class="token operator">=</span><span class="token operator">&gt;</span> x<span class="token operator">&lt;=</span>b<span class="token punctuation">;</span>            <span class="token keyword">WHEN</span><span class="token vhdl-vectors number">"10"</span><span class="token operator">=</span><span class="token operator">&gt;</span> x<span class="token operator">&lt;=</span>c<span class="token punctuation">;</span>            <span class="token keyword">WHEN</span> <span class="token keyword">OTHERS</span><span class="token operator">=</span><span class="token operator">&gt;</span> x<span class="token operator">&lt;=</span>d<span class="token punctuation">;</span>        <span class="token keyword">END</span> <span class="token keyword">CASE</span><span class="token punctuation">;</span>    <span class="token keyword">END</span> <span class="token keyword">PROCESS</span> mux4_1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl"><span class="token comment">---变量声明</span><span class="token keyword">VARIABLE</span> tmp<span class="token punctuation">:</span> Bit<span class="token punctuation">;</span><span class="token comment">---整体赋值</span>temp<span class="token operator">:=</span><span class="token vhdl-vectors number">"1010101010"</span><span class="token punctuation">;</span>temp<span class="token operator">:=</span><span class="token vhdl-vectors number">x"AA"</span><span class="token punctuation">;</span><span class="token comment">---逐位赋值</span><span class="token function">temp</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">:=</span><span class="token number">'1'</span><span class="token punctuation">;</span><span class="token comment">---多位赋值</span><span class="token function">temp</span><span class="token punctuation">(</span><span class="token number">7</span> <span class="token keyword">downto</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">:=</span><span class="token vhdl-vectors number">"1010"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="信号"><a href="#信号" class="headerlink" title="信号"></a>信号</h2><pre class="line-numbers language-vhdl" data-language="vhdl"><code class="language-vhdl">IBRARY ieee<span class="token punctuation">;</span><span class="token constant">USE</span> ieee<span class="token punctuation">.</span>std_logic_1164<span class="token punctuation">.</span><span class="token keyword">ALL</span><span class="token punctuation">;</span>   <span class="token keyword">ENTITY</span> zuhe <span class="token keyword">IS</span>                     <span class="token keyword">PORT</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">:</span><span class="token keyword">IN</span> STD_LOGIC<span class="token punctuation">;</span>        g<span class="token punctuation">:</span><span class="token keyword">OUT</span> STD_LOGIC<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">END</span> zuhe<span class="token punctuation">;</span><span class="token keyword">ARCHITECTURE</span> one <span class="token keyword">OF</span> zuhe <span class="token keyword">IS</span>     <span class="token keyword">SIGNAL</span> e<span class="token punctuation">,</span>f<span class="token punctuation">:</span>Std_Logic<span class="token punctuation">;</span>      <span class="token comment">--信号全局声明</span> <span class="token keyword">BEGIN</span>    e<span class="token operator">&lt;=</span>a <span class="token operator">OR</span> b<span class="token punctuation">;</span>    f<span class="token operator">&lt;=</span><span class="token function">NOT</span><span class="token punctuation">(</span>c <span class="token operator">OR</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>    g<span class="token operator">&lt;=</span>e <span class="token operator">AND</span> f<span class="token punctuation">;</span><span class="token keyword">END</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> VHDL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VHDL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode优雅配置LaTeX</title>
      <link href="2020/07/11/vscode-you-ya-pei-zhi-latex/"/>
      <url>2020/07/11/vscode-you-ya-pei-zhi-latex/</url>
      
        <content type="html"><![CDATA[<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><ol><li><ul><li><a href="https://blog.eatgrape.top/2020/07/02/LaTeX%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html">TeXlive安装</a></li></ul></li><li><ul><li><a href="https://code.visualstudio.com/">VSCode安装</a></li></ul></li></ol><h2 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h2><ol><li>在VSCode插件商店中下载LaTex Workshop插件。</li><li>使用ctrl+shift+p快捷键搜索Preferences: Open Settings(JSON)。打开的json文件即是VSCode的配置文件，可能在之前配置过python等其他语言，这次LaTeX配置只需要在末尾追加并保存：<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"latex-workshop.latex.recipes"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>          <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"xelatex"</span><span class="token punctuation">,</span>          <span class="token property">"tools"</span><span class="token operator">:</span> <span class="token punctuation">[</span>              <span class="token string">"xelatex"</span>         <span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>         <span class="token punctuation">{</span>          <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"xe*2"</span><span class="token punctuation">,</span>          <span class="token property">"tools"</span><span class="token operator">:</span> <span class="token punctuation">[</span>              <span class="token string">"xelatex"</span><span class="token punctuation">,</span>              <span class="token string">"xelatex"</span>         <span class="token punctuation">]</span>       <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"xelatex -&gt; bibtex -&gt; xelatex*2"</span><span class="token punctuation">,</span>        <span class="token property">"tools"</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token string">"xelatex"</span><span class="token punctuation">,</span>            <span class="token string">"bibtex"</span><span class="token punctuation">,</span>            <span class="token string">"xelatex"</span><span class="token punctuation">,</span>            <span class="token string">"xelatex"</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token property">"latex-workshop.latex.tools"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"latexmk"</span><span class="token punctuation">,</span>      <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"latexmk"</span><span class="token punctuation">,</span>      <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"-synctex=1"</span><span class="token punctuation">,</span>        <span class="token string">"-interaction=nonstopmode"</span><span class="token punctuation">,</span>        <span class="token string">"-file-line-error"</span><span class="token punctuation">,</span>        <span class="token string">"-pdf"</span><span class="token punctuation">,</span>        <span class="token string">"%DOC%"</span>      <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"xelatex"</span><span class="token punctuation">,</span>      <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"xelatex"</span><span class="token punctuation">,</span>      <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"-synctex=1"</span><span class="token punctuation">,</span>        <span class="token string">"-interaction=nonstopmode"</span><span class="token punctuation">,</span>        <span class="token string">"-file-line-error"</span><span class="token punctuation">,</span>        <span class="token string">"%DOC%"</span>      <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"pdflatex"</span><span class="token punctuation">,</span>      <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"pdflatex"</span><span class="token punctuation">,</span>      <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"-synctex=1"</span><span class="token punctuation">,</span>        <span class="token string">"-interaction=nonstopmode"</span><span class="token punctuation">,</span>        <span class="token string">"-file-line-error"</span><span class="token punctuation">,</span>        <span class="token string">"%DOC%"</span>      <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"bibtex"</span><span class="token punctuation">,</span>      <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"bibtex"</span><span class="token punctuation">,</span>      <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"%DOCFILE%"</span>      <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token property">"latex-workshop.view.pdf.viewer"</span><span class="token operator">:</span> <span class="token string">"tab"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>创建一个如下内容的.tex文件测试：<pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\documentclass[letterpaper,11pt]{article} \usepackage{latexsym}\usepackage[empty]{fullpage}\usepackage{titlesec}\usepackage{marvosym}\usepackage[usenames,dvipsnames]{color}\usepackage{verbatim}\usepackage{enumitem}\usepackage[hidelinks]{hyperref}\usepackage{fancyhdr}\usepackage[english]{babel}\usepackage{tabularx}\usepackage[UTF8]{ctex} \begin{document}\textbf{hello world 2020!}\end{document}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>按如下过程，编译运行。<center>![](https://github.com/Petr-Chan/tuchuang/raw/master/VSCode_Latex.png) </center></li></ol><ol start="5"><li>结果展示：<center>![](https://github.com/Petr-Chan/tuchuang/raw/master/VSCode_LaTex1.png) </center></li></ol><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>1.<a href="https://blog.csdn.net/GodWriter/article/details/99829734">https://blog.csdn.net/GodWriter/article/details/99829734</a><br>2.<a href="https://blog.csdn.net/yyhaohaoxuexi/article/details/86520926">https://blog.csdn.net/yyhaohaoxuexi/article/details/86520926</a></p>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
          <category> VSCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTex </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scrapy爬虫实战--当当网</title>
      <link href="2020/07/10/scrapy-pa-chong-shi-zhan-dang-dang-wang/"/>
      <url>2020/07/10/scrapy-pa-chong-shi-zhan-dang-dang-wang/</url>
      
        <content type="html"><![CDATA[<p>看完Scrapy的概述，我们大概对Scrapy这个爬虫框架有了一个大致的了解。下面就通过爬取当当网python书籍信息来对Scrapy这个框架做一个实战。</p><ol><li>创建一个项目文件夹，并打开终端cd到创建文件夹处。在该目录下，在终端输入：<pre class="line-numbers language-none"><code class="language-none">scrapy startproject (爬虫项目名)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>   通过执行这条命令，便会在当前文件夹下创建Scrapy的大致模板了。</li></ol><hr><ol start="2"><li>进入工程文件夹，在终端输入：<pre class="line-numbers language-none"><code class="language-none">scrapy genspider (爬虫py的名字) （爬取的范围）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><hr><ol start="3"><li>在items.py中添加item项。<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># Define here the models for your scraped items</span><span class="token comment">#</span><span class="token comment"># See documentation in:</span><span class="token comment"># https://docs.scrapy.org/en/latest/topics/items.html</span><span class="token comment">#导入第三方库scrapy</span><span class="token keyword">import</span> scrapy<span class="token comment">#定义有关需要爬取的数据的类DdpythonItem（当当pythonItem）</span><span class="token keyword">class</span> <span class="token class-name">DdpythonItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># define the fields for your item here like:</span>    <span class="token comment"># name = scrapy.Field()</span>    name<span class="token operator">=</span>scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>             <span class="token comment">#书名</span>    author<span class="token operator">=</span>scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>           <span class="token comment">#作者</span>    introduction<span class="token operator">=</span>scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">#简介</span>    price<span class="token operator">=</span>scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment">#价格</span>    press<span class="token operator">=</span>scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment">#出版社</span>    time<span class="token operator">=</span>scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>             <span class="token comment">#出版时间</span>    comment_num<span class="token operator">=</span>scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">#评价数目</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><hr><ol start="4"><li>进入前面生成的爬虫py文件中，进行爬取方法的定义。<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># 导入第三方库scrapy以及自定义库items中的Item类DdpythonItem</span><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> <span class="token punctuation">.</span><span class="token punctuation">.</span>items <span class="token keyword">import</span> DdpythonItem<span class="token comment"># 定义爬虫类DdSpider（当当Spider），爬虫名字命名为dd</span><span class="token keyword">class</span> <span class="token class-name">DdSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'dd'</span>    <span class="token comment"># 爬取的网站为当当网，开始的url为'http://search.dangdang.com/?key=python'（python类图书界面）</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'dangdang.com'</span><span class="token punctuation">]</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'http://search.dangdang.com/?key=python'</span><span class="token punctuation">]</span>    <span class="token comment"># 定义解析response对象的方法</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 使用 XPath 从页面的HTML源码中选择需要提取的数据</span>        <span class="token comment"># 根据对HTML源码的观察，设置XPath解析规则提取出所有书籍信息books</span>        books <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//ul[@class="bigimg"]/li'</span><span class="token punctuation">)</span>        <span class="token comment"># 对提取到的所有图书信息进行遍历，提取每一本书的相关信息</span>        <span class="token keyword">for</span> book <span class="token keyword">in</span> books<span class="token punctuation">:</span>            item <span class="token operator">=</span> DdpythonItem<span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment"># 生成一个Item对象，用于存储提取到的信息</span>            item<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./a[@class="pic"]/@title'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'introduction'</span><span class="token punctuation">]</span> <span class="token operator">=</span> book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./p[@class="detail"]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./p[@class="detail"]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">'无介绍信息'</span>            item<span class="token punctuation">[</span><span class="token string">'author'</span><span class="token punctuation">]</span> <span class="token operator">=</span> book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./p/span[1]/a[1]/@title'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./p/span[1]/a[1]/@title'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">'无作者信息'</span>            item<span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span> <span class="token operator">=</span> book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./p/span[@class="search_now_price"]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'press'</span><span class="token punctuation">]</span> <span class="token operator">=</span> book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./p/span[3]/a/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./p/span[3]/a/text()'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">'无出版社信息'</span>            item<span class="token punctuation">[</span><span class="token string">'time'</span><span class="token punctuation">]</span> <span class="token operator">=</span> book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./p[5]/span[2]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./p[5]/span[2]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">'无出版时间信息'</span>            item<span class="token punctuation">[</span><span class="token string">'comment_num'</span><span class="token punctuation">]</span> <span class="token operator">=</span> book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./p[@class="search_star_line"]/a/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 将提取到的数据提交给pipelines进行保存输出</span>            <span class="token keyword">yield</span> item        <span class="token comment"># 设置爬取的页面数pageNum，爬取10个页面的python图书信息</span>        pageNum <span class="token operator">=</span> <span class="token number">10</span>        <span class="token comment"># 根据url的规则进行构建新的url，即page，将page提交给scrapy engine进行处理</span>        <span class="token keyword">for</span> page <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> pageNum<span class="token punctuation">)</span><span class="token punctuation">:</span>            page <span class="token operator">=</span> <span class="token string">'http://search.dangdang.com/?key=python&amp;page_index={}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span>            <span class="token comment"># 对页面page提交request请求，利用自定义的解析方法parse对获取到的页面进行解析</span>            <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>page<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><hr><ol start="5"><li>在pipelines.py文件中，将item中提取的数据保存下来。<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># Define your item pipelines here</span><span class="token comment">#</span><span class="token comment"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span><span class="token comment"># See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span><span class="token comment"># 导入第三方库pymysql，用于对MySQL数据库进行处理</span><span class="token keyword">import</span> pymysql<span class="token comment"># 定义用于输出数据到MySQL数据库的Pipeline类DdpythonPipeline</span><span class="token keyword">class</span> <span class="token class-name">DdpythonPipeline</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 定义处理item对象的方法process_item</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 通过pymysql对本地数据库进行连接，并且指定连接的数据库为“dd”</span>        db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">"Localhost"</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">"cpt200406"</span><span class="token punctuation">,</span>db<span class="token operator">=</span><span class="token string">"dd"</span><span class="token punctuation">,</span>charset<span class="token operator">=</span><span class="token string">"utf8"</span><span class="token punctuation">)</span>        cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 获取db的游标对象，用于对事务进行处理</span>        <span class="token comment"># 根据提取的数据进行再次处理加工，转换成最终存储到数据库中的类型</span>        name <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        introduction<span class="token operator">=</span>item<span class="token punctuation">[</span><span class="token string">"introduction"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        author<span class="token operator">=</span>item<span class="token punctuation">[</span><span class="token string">"author"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        price <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">"price"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'¥'</span><span class="token punctuation">)</span>     <span class="token comment"># 删除价格前面的货币符￥</span>        press <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">"press"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        time <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">"time"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>   <span class="token comment"># 删除时间前面的‘/’</span>        comment_num<span class="token operator">=</span>item<span class="token punctuation">[</span><span class="token string">"comment_num"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'条评论'</span><span class="token punctuation">)</span><span class="token comment"># 删除原始数据中的汉字‘条评论’</span>        <span class="token comment"># 对数据库进行插入操作，将提取到的item对象中的数据插入到dd数据库的ddpython数据表中</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'INSERT INTO ddpython(book_name,introduction,author,price,press,publication_time,comment_num) VALUES (%s,%s,%s,%s,%s,%s,%s)'</span><span class="token punctuation">,</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>introduction<span class="token punctuation">,</span>author<span class="token punctuation">,</span>price<span class="token punctuation">,</span>press<span class="token punctuation">,</span>time<span class="token punctuation">,</span>comment_num<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># 对事务操作进行提交</span>        db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 关闭游标对象cursor以及数据库对象db</span>        cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 返回item对象</span>        <span class="token keyword">return</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><hr><ol start="6"><li>在settings.py中,将pipelines的配置打开<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># Scrapy settings for DDPython project</span><span class="token comment">#</span><span class="token comment"># For simplicity, this file contains only settings considered important or</span><span class="token comment"># commonly used. You can find more settings consulting the documentation:</span><span class="token comment">#</span><span class="token comment">#     https://docs.scrapy.org/en/latest/topics/settings.html</span><span class="token comment">#     https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span><span class="token comment">#     https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span>BOT_NAME <span class="token operator">=</span> <span class="token string">'DDPython'</span>SPIDER_MODULES <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'DDPython.spiders'</span><span class="token punctuation">]</span>NEWSPIDER_MODULE <span class="token operator">=</span> <span class="token string">'DDPython.spiders'</span><span class="token comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span><span class="token comment">#USER_AGENT = 'DDPython (+http://www.yourdomain.com)'</span><span class="token comment"># Obey robots.txt rules</span>ROBOTSTXT_OBEY <span class="token operator">=</span> <span class="token boolean">True</span><span class="token comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span><span class="token comment">#CONCURRENT_REQUESTS = 32</span><span class="token comment"># Configure a delay for requests for the same website (default: 0)</span><span class="token comment"># See https://docs.scrapy.org/en/latest/topics/settings.html#download-delay</span><span class="token comment"># See also autothrottle settings and docs</span><span class="token comment">#DOWNLOAD_DELAY = 3</span><span class="token comment"># The download delay setting will honor only one of:</span><span class="token comment">#CONCURRENT_REQUESTS_PER_DOMAIN = 16</span><span class="token comment">#CONCURRENT_REQUESTS_PER_IP = 16</span><span class="token comment"># Disable cookies (enabled by default)</span><span class="token comment">#COOKIES_ENABLED = False</span><span class="token comment"># Disable Telnet Console (enabled by default)</span><span class="token comment">#TELNETCONSOLE_ENABLED = False</span><span class="token comment"># Override the default request headers:</span><span class="token comment">#DEFAULT_REQUEST_HEADERS = {</span><span class="token comment">#   'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',</span><span class="token comment">#   'Accept-Language': 'en',</span><span class="token comment">#}</span><span class="token comment"># Enable or disable spider middlewares</span><span class="token comment"># See https://docs.scrapy.org/en/latest/topics/spider-middleware.html</span><span class="token comment">#SPIDER_MIDDLEWARES = {</span><span class="token comment">#    'DDPython.middlewares.DdpythonSpiderMiddleware': 543,</span><span class="token comment">#}</span><span class="token comment"># Enable or disable downloader middlewares</span><span class="token comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html</span><span class="token comment">#DOWNLOADER_MIDDLEWARES = {</span><span class="token comment">#    'DDPython.middlewares.DdpythonDownloaderMiddleware': 543,</span><span class="token comment">#}</span><span class="token comment"># Enable or disable extensions</span><span class="token comment"># See https://docs.scrapy.org/en/latest/topics/extensions.html</span><span class="token comment">#EXTENSIONS = {</span><span class="token comment">#    'scrapy.extensions.telnet.TelnetConsole': None,</span><span class="token comment">#}</span><span class="token comment"># Configure item pipelines</span><span class="token comment"># See https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">{</span>   <span class="token string">'DDPython.pipelines.DdpythonPipeline'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment"># Enable and configure the AutoThrottle extension (disabled by default)</span><span class="token comment"># See https://docs.scrapy.org/en/latest/topics/autothrottle.html</span><span class="token comment">#AUTOTHROTTLE_ENABLED = True</span><span class="token comment"># The initial download delay</span><span class="token comment">#AUTOTHROTTLE_START_DELAY = 5</span><span class="token comment"># The maximum download delay to be set in case of high latencies</span><span class="token comment">#AUTOTHROTTLE_MAX_DELAY = 60</span><span class="token comment"># The average number of requests Scrapy should be sending in parallel to</span><span class="token comment"># each remote server</span><span class="token comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span><span class="token comment"># Enable showing throttling stats for every response received:</span><span class="token comment">#AUTOTHROTTLE_DEBUG = False</span><span class="token comment"># Enable and configure HTTP caching (disabled by default)</span><span class="token comment"># See https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span><span class="token comment">#HTTPCACHE_ENABLED = True</span><span class="token comment">#HTTPCACHE_EXPIRATION_SECS = 0</span><span class="token comment">#HTTPCACHE_DIR = 'httpcache'</span><span class="token comment">#HTTPCACHE_IGNORE_HTTP_CODES = []</span><span class="token comment">#HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><hr><ol start="7"><li>进入工作目录文件夹，输入以下命令启动爬虫：<pre class="line-numbers language-none"><code class="language-none">scrapy crawl (爬虫名)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 爬虫 </category>
          
          <category> 实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scrapy爬虫简介</title>
      <link href="2020/07/08/scrapy-pa-chong-jian-jie/"/>
      <url>2020/07/08/scrapy-pa-chong-jian-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><p><img src="https://github.com/Petr-Chan/tuchuang/raw/master/Scrapy_processing.png" alt="img"></p><p>1.Spiders(爬虫):它负责处理所有Responses,从中分析提取数据，获取Item字段需要的数据，并将需要跟进的URL提交给引擎，再次进入Scheduler(调度器)</p><p>2.Engine(引擎)：负责Spider、ItemPipeline、Downloader、Scheduler中间的通讯，信号、数据传递等。</p><p>3.Scheduler(调度器)：它负责接受引擎发送过来的Request请求，并按照一定的方式进行整理排列，入队，当引擎需要时，交还给引擎。</p><p>4.Downloader(下载器)：负责下载Scrapy Engine(引擎)发送的所有Requests请求，并将其获取到的Responses交还给Scrapy Engine(引擎)，由引擎交给Spider来处理</p><p>5.ItemPipeline(管道):它负责处理Spider中获取到的Item，并进行进行后期处理（详细分析、过滤、存储等）的地方.</p><p>6.Downloader Middlewares（下载中间件）：你可以当作是一个可以自定义扩展下载功能的组件。</p><p>7.Spider Middlewares（Spider中间件）：你可以理解为是一个可以自定扩展和操作引擎和Spider中间通信的功能组件（比如进入Spider的Responses;和从Spider出去的Requests）</p><p><img src="https://github.com/Petr-Chan/tuchuang/raw/master/Scrapy_struct.png"></p><h2 id="入门使用"><a href="#入门使用" class="headerlink" title="入门使用"></a>入门使用</h2><h3 id="创建过程："><a href="#创建过程：" class="headerlink" title="创建过程："></a>创建过程：</h3><p><img src="https://github.com/Petr-Chan/tuchuang/raw/master/Scrapy_way.png"></p><hr><h3 id="结构："><a href="#结构：" class="headerlink" title="结构："></a>结构：</h3><p><img src="https://github.com/Petr-Chan/tuchuang/raw/master/Scrapt_file.png"></p><hr><h3 id="spider使用："><a href="#spider使用：" class="headerlink" title="spider使用："></a>spider使用：</h3><p><img src="https://github.com/Petr-Chan/tuchuang/raw/master/Scrapy_spider.png"></p><hr><h3 id="pipeline更改和使用："><a href="#pipeline更改和使用：" class="headerlink" title="pipeline更改和使用："></a>pipeline更改和使用：</h3><p><img src="https://github.com/Petr-Chan/tuchuang/raw/master/Scrapy_pipeline_1.png"></p><p><img src="https://github.com/Petr-Chan/tuchuang/raw/master/Scrapy_pipeline_2.png"></p><hr><h3 id="log简单设置："><a href="#log简单设置：" class="headerlink" title="log简单设置："></a>log简单设置：</h3><p><img src="https://github.com/Petr-Chan/tuchuang/raw/master/Scrapy_log.png"></p><hr><h3 id="翻页爬取方法："><a href="#翻页爬取方法：" class="headerlink" title="翻页爬取方法："></a>翻页爬取方法：</h3><p><img src="https://github.com/Petr-Chan/tuchuang/raw/master/Scrapy_turnpage.png"></p><p><img src="https://github.com/Petr-Chan/tuchuang/raw/master/Scrapy_turnpage1.png"></p><h3 id="item的设置："><a href="#item的设置：" class="headerlink" title="item的设置："></a>item的设置：</h3><p><img src="https://github.com/Petr-Chan/tuchuang/raw/master/Scrapy_item.png"></p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.bilibili.com/video/BV1mf4y127S5#reply3147097466">https://www.bilibili.com/video/BV1mf4y127S5#reply3147097466</a></p>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX环境搭建</title>
      <link href="2020/07/02/latex-huan-jing-da-jian/"/>
      <url>2020/07/02/latex-huan-jing-da-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>工欲善其事，必先利其器。所以第一步当然是安装软件啦！主要安装的东西分为2部分：一部分是LaTex的编译器，另一部分则是LaTex的IDE环境，下面就开始我们的入门之旅吧！</p><h3 id="1-TeXlive安装"><a href="#1-TeXlive安装" class="headerlink" title="1).TeXlive安装"></a>1).TeXlive安装</h3><ul><li><p><a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/texlive2020.iso">TeXlive镜像文件下载地址</a></p></li><li><p>下载完成后，使用虚拟光驱运行如下文件<img src="https://github.com/Petr-Chan/tuchuang/raw/master/Latex1.png" alt="Latex1"></p></li><li><p>然后根据自己的需求安装需要的包：<img src="https://github.com/Petr-Chan/tuchuang/raw/master/Latex2.png" alt="Latex2"></p></li><li><p>为了验证是否安装成功，可以进入Windows的命令行敲入如下命令。</p></li></ul><p><img src="https://github.com/Petr-Chan/tuchuang/raw/master/Latex3.png" alt="Latex3"></p><h3 id="2-IDE的安装"><a href="#2-IDE的安装" class="headerlink" title="2).IDE的安装"></a>2).IDE的安装</h3><p>① <a href="https://sourceforge.net/projects/texstudio/">TeXstudio下载地址</a></p><p>② <a href="http://www.tug.org/texworks/">TeXworks editor下载地址</a></p>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java期末练习</title>
      <link href="2020/06/14/java-qi-mo-lian-xi/"/>
      <url>2020/06/14/java-qi-mo-lian-xi/</url>
      
        <content type="html"><![CDATA[<p>这期可能是关于Java的最后一期更新了！期末考试即将来临，老师终于官方的发题目啦！这让我倍感涕零。下面二话不说就抛代码了~</p><h3 id="题一（基本循环、选择语句）"><a href="#题一（基本循环、选择语句）" class="headerlink" title="题一（基本循环、选择语句）"></a>题一（基本循环、选择语句）</h3><p> 编写Demo.java，输出10～100以内既能被2整除，又能被3整除的整数，要求每行只能打印5个数。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> agrs<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token class-name">String</span> s<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i<span class="token operator">%</span><span class="token number">3</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>count<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>count<span class="token operator">++</span><span class="token punctuation">;</span>s<span class="token operator">+=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token operator">+=</span><span class="token string">" "</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>s<span class="token operator">+=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token operator">+=</span><span class="token string">" "</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="题二（类变量与类方法操作）"><a href="#题二（类变量与类方法操作）" class="headerlink" title="题二（类变量与类方法操作）"></a>题二（类变量与类方法操作）</h3><p>  编写一汽车类Car，其具有以下属性：</p><p>品牌：brand，类型String；发动机排量:engineDisplacement, 类型：double；</p><p>速度：speed，类型double；状态：status，类型boolean；</p><p>最高时速：maxSpeed，类型double</p><p>Car的方法：</p><p>构造方法：Car(String brand, double engineDisplacement, double maxSpeed)</p><p>启动：start( )，该方法使得status值变为true；</p><p>加速：speedUp( )，当汽车处于启动状态时，每调用一次，速度增加5，但速度不高于最高时速；</p><p>减速：slowDown( )，当汽车处于启动状态时，每调用一次，速度减5，但速度不小于0；</p><p>熄火：stop( )，当speed为0时，将status值变为false。</p><p>每个方法除改变成员变量外，还要打印出方法执行后的状态和速度。</p><p>试完成Car类的实现，并且编写main方法，实例化一个Car对象，其中品牌为”宝马”，排量2.0，最高时速为160，依次执行启动该汽车，加速到120，再减速到0，最后熄火，要求显示各执行结果。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token class-name">String</span> brand<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">double</span> engineDisplacement<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">double</span> speed<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">boolean</span> status<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">double</span> maxSpeed<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token class-name">String</span> brand<span class="token punctuation">,</span> <span class="token keyword">double</span> engineDisplacement<span class="token punctuation">,</span><span class="token keyword">double</span> maxSpeed<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>brand<span class="token operator">=</span>brand<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>engineDisplacement<span class="token operator">=</span>engineDisplacement<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>maxSpeed<span class="token operator">=</span>maxSpeed<span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Car构造函数执行后的status:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token operator">+</span><span class="token string">",speed:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"start函数执行后的status:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token operator">+</span><span class="token string">",speed:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">speedUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token operator">+</span><span class="token number">5</span><span class="token operator">&lt;=</span><span class="token keyword">this</span><span class="token punctuation">.</span>maxSpeed<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token operator">+=</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"speedUp函数执行后的status:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token operator">+</span><span class="token string">",speed:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">slowDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token operator">-</span><span class="token number">5</span><span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token operator">-=</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"slowDown函数执行后的status:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token operator">+</span><span class="token string">",speed:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"stop函数执行后的status:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token operator">+</span><span class="token string">",speed:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Car</span> c<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token string">"宝马"</span><span class="token punctuation">,</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">160</span><span class="token punctuation">)</span><span class="token punctuation">;</span>c<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">24</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>c<span class="token punctuation">.</span><span class="token function">speedUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">24</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>c<span class="token punctuation">.</span><span class="token function">slowDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>c<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="题三（异常处理）"><a href="#题三（异常处理）" class="headerlink" title="题三（异常处理）"></a>题三（异常处理）</h3><p>编写一银行类Bank，其中存款余额：balance，要求：</p><p>(1)构造函数：Bank(int balance)；</p><p>(2)存款操作：deposit( )；</p><p>(3)取款操作：withdraw( )；</p><p>(4)获取余额：getBalance( )；</p><p>编写main函数，实例化Bank对象，初始给定存款100，存入50，打印余额，连续取款120，40，打印余额。要求用自定义异常处理方式解决余额不足的问题。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bank</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">double</span> balance<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">Bank</span><span class="token punctuation">(</span><span class="token keyword">int</span> balance<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token operator">=</span>balance<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deposit</span><span class="token punctuation">(</span><span class="token keyword">double</span> store<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token operator">+=</span>store<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token keyword">double</span> draw<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token operator">-</span>draw<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"余额不足！无法取出"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token operator">-=</span>draw<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Bank</span> bk<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Bank</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"原账户余额："</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bk<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>bk<span class="token punctuation">.</span><span class="token function">deposit</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"存入50元操作后余额："</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bk<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>bk<span class="token punctuation">.</span><span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"去除120元操作后余额："</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bk<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>bk<span class="token punctuation">.</span><span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"去除40元操作后余额："</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bk<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="题四（GUI设计）"><a href="#题四（GUI设计）" class="headerlink" title="题四（GUI设计）"></a>题四（GUI设计）</h3><p> 利用Swing组件编写一个界面大小400×300像素的简易文本编辑器MyTextEditor，要求：</p><p>(1)程序启动后，多行文本输入框JTextArea中显示当前目录下myText.txt文件中原有内容，如果该文件不存在，则新建文件；</p><p>(2)保存(按钮)功能：将编辑器界面输入的内容写入myText.txt文件中保存；</p><p>(3)取消(按钮)功能：将文本框中内容清空；</p><p>(4)退出(按钮)功能：退出程序。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTextEditor</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token keyword">implements</span> <span class="token class-name">ActionListener</span><span class="token punctuation">{</span><span class="token comment">//成员变量</span><span class="token class-name">JButton</span> b1<span class="token punctuation">,</span>b2<span class="token punctuation">,</span>b3<span class="token punctuation">;</span><span class="token class-name">JTextArea</span> area<span class="token punctuation">;</span><span class="token class-name">String</span> text<span class="token punctuation">;</span><span class="token comment">//构造函数</span><span class="token class-name">MyTextEditor</span><span class="token punctuation">(</span><span class="token class-name">String</span> xTitle<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">super</span><span class="token punctuation">(</span>xTitle<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置标题</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置窗口大小</span><span class="token class-name">Container</span> c<span class="token operator">=</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//获得容器</span>c<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置布局</span><span class="token class-name">JPanel</span> panel1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置输入框小容器</span>panel1<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FlowLayout</span><span class="token punctuation">(</span><span class="token class-name">FlowLayout</span><span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>area<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JTextArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>area<span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">)</span><span class="token punctuation">;</span>area<span class="token punctuation">.</span><span class="token function">setLineWrap</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>panel1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>area<span class="token punctuation">)</span><span class="token punctuation">;</span>c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>panel1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">JPanel</span> panel2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置保存，取消，退出按钮</span>panel2<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FlowLayout</span><span class="token punctuation">(</span><span class="token class-name">FlowLayout</span><span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>b1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"保存"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>b1<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置事件监督</span>b2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"取消"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>b2<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>b3<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"退出"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>b3<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>panel2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b1<span class="token punctuation">)</span><span class="token punctuation">;</span>panel2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">;</span>panel2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b3<span class="token punctuation">)</span><span class="token punctuation">;</span>c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>panel2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//小容器放入大容器中</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//显示许可</span><span class="token class-name">File</span> f<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"myText.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建File变量</span><span class="token keyword">if</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//是否存在该目录，不存在创建</span><span class="token keyword">try</span><span class="token punctuation">{</span>f<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//读入txt中的文字</span><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token class-name">FileReader</span> fr<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token string">"myText.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">BufferedReader</span> br<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>fr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> aline<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>br<span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>aline<span class="token operator">=</span>br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>area<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>aline<span class="token operator">+</span><span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>fr<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>br<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//编写事件的接口方法</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>b1<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//若按下保存按钮</span><span class="token class-name">String</span> store<span class="token punctuation">;</span>store<span class="token operator">=</span>area<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获得目前文本框中内容</span><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token comment">//实现写入txt功能</span><span class="token class-name">FileWriter</span> fw<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span><span class="token string">"myText.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fw<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">;</span>fw<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>b2<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//按下取消按钮</span>area<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//清空文本框中内容</span>area<span class="token punctuation">.</span><span class="token function">setEditable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//按下退出按钮，退出</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//测试main函数</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> agrs<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">MyTextEditor</span> m<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">MyTextEditor</span><span class="token punctuation">(</span><span class="token string">"MyTextEditor"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Java的GUI设计</title>
      <link href="2020/06/13/java-de-gui-she-ji/"/>
      <url>2020/06/13/java-de-gui-she-ji/</url>
      
        <content type="html"><![CDATA[<p>在2020的今天，GUI，可能已经是大家耳熟能详的词了。所谓GUI即是用户界面，像我们的QQ，WeChat等等都是以用户界面的形式呈现在我们眼前的。而Java作为一种运用广泛的程序语言，自然在GUI设计上也有其独特之处。下面就以2道常规GUI题来实战一下吧！此次的题目以及代码是我们优秀的冯py同学投稿！大家慢慢欣赏哦！</p><hr><h3 id="题1"><a href="#题1" class="headerlink" title="题1"></a>题1</h3><p>创建一个可以移动、改变大小、最大化、且可以关闭的JFrame窗口，并且添加菜单和工具条；设计相应的菜单加速键以及快捷键图标。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> test <span class="token keyword">extends</span> <span class="token class-name">JFrame</span><span class="token punctuation">{</span><span class="token comment">//定义菜单</span>    <span class="token class-name">JMenuBar</span> mb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenuBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//工具栏对象</span>    <span class="token class-name">JToolBar</span> mtb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JToolBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">JMenu</span> mFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JMenu</span><span class="token punctuation">(</span><span class="token string">"文件(F)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">JMenuItem</span> miNew<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"新建(N)"</span><span class="token punctuation">,</span><span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>VK_N<span class="token punctuation">)</span><span class="token punctuation">,</span>            miOpen<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"打开(O)..."</span><span class="token punctuation">,</span><span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>VK_O<span class="token punctuation">)</span><span class="token punctuation">,</span>            miSave<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"保存(S)"</span><span class="token punctuation">,</span><span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>VK_S<span class="token punctuation">)</span><span class="token punctuation">,</span>            miFont<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"字体与颜色(F)..."</span><span class="token punctuation">,</span><span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>VK_F<span class="token punctuation">)</span><span class="token punctuation">,</span>            miQuit<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JMenuItem</span><span class="token punctuation">(</span><span class="token string">"退出(X)"</span><span class="token punctuation">,</span><span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>VK_X<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//菜单选项</span>            <span class="token comment">//构造函数</span>    <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> sTitle<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>sTitle<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//添加组件</span>        <span class="token function">addMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置窗口大小</span>        <span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置close按钮操作</span>        <span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置工具栏</span>        <span class="token function">addToolBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置输入框</span>        <span class="token function">addTextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//添加按钮</span>        <span class="token function">addButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment">//添加菜单</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">addMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">setJMenuBar</span><span class="token punctuation">(</span>mb<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置快捷键</span>        miNew<span class="token punctuation">.</span><span class="token function">setAccelerator</span><span class="token punctuation">(</span><span class="token class-name">KeyStroke</span><span class="token punctuation">.</span><span class="token function">getKeyStroke</span><span class="token punctuation">(</span><span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>VK_N<span class="token punctuation">,</span><span class="token class-name">InputEvent</span><span class="token punctuation">.</span>CTRL_DOWN_MASK<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        miOpen<span class="token punctuation">.</span><span class="token function">setAccelerator</span><span class="token punctuation">(</span><span class="token class-name">KeyStroke</span><span class="token punctuation">.</span><span class="token function">getKeyStroke</span><span class="token punctuation">(</span><span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>VK_O<span class="token punctuation">,</span><span class="token class-name">InputEvent</span><span class="token punctuation">.</span>CTRL_DOWN_MASK<span class="token operator">|</span><span class="token class-name">InputEvent</span><span class="token punctuation">.</span>SHIFT_DOWN_MASK<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mFile<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>miNew<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//新建</span>        mFile<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>miOpen<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//打开</span>        mFile<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>miSave<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//保存</span>        mFile<span class="token punctuation">.</span><span class="token function">addSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//分割线</span>        mFile<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>miFont<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//字体和颜色</span>        mFile<span class="token punctuation">.</span><span class="token function">addSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//分割线</span>        mFile<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>miQuit<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//退出</span>        mb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/*//改变窗口坐标        Toolkit tk = getToolkit();//得到一个Toolkit对象        Image icon = tk.getImage("online.gif");        setIconImage(icon);*/</span>    <span class="token punctuation">}</span>            <span class="token comment">//添加工具条</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">addToolBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//工具条</span>        <span class="token class-name">Container</span> c <span class="token operator">=</span> <span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>NORTH<span class="token punctuation">,</span>mtb<span class="token punctuation">)</span><span class="token punctuation">;</span>                mtb<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FlowLayout</span><span class="token punctuation">(</span><span class="token class-name">FlowLayout</span><span class="token punctuation">.</span>LEFT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FgButton</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> btn <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">FgButton</span><span class="token punctuation">(</span><span class="token string">"新建文件"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                <span class="token keyword">new</span> <span class="token class-name">FgButton</span><span class="token punctuation">(</span><span class="token string">"打开文件"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                <span class="token keyword">new</span> <span class="token class-name">FgButton</span><span class="token punctuation">(</span><span class="token string">"保存文件"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> btn<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                btn<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setBorder</span><span class="token punctuation">(</span><span class="token class-name">BorderFactory</span><span class="token punctuation">.</span><span class="token function">createEmptyBorder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mtb<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>btn<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//设置不可以浮动</span>        mtb<span class="token punctuation">.</span><span class="token function">setFloatable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment">//添加标签和输入框</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addTextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">Container</span> c <span class="token operator">=</span> <span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FlowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"用户名："</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JTextField</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"密   码 ："</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JPasswordField</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment">//按钮添加</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">Container</span> c<span class="token operator">=</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">JButton</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"登入"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ic<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment">//测试函数</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//创建窗口对象</span>        test frm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">"one"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//显示窗口</span>        frm<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token comment">//自定义按钮</span><span class="token keyword">class</span> <span class="token class-name">FgButton</span> <span class="token keyword">extends</span> <span class="token class-name">JButton</span><span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token class-name">FgButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//Icon对象用来引入图片</span>        <span class="token keyword">public</span> <span class="token class-name">FgButton</span><span class="token punctuation">(</span><span class="token class-name">Icon</span> icon<span class="token punctuation">,</span><span class="token class-name">String</span> strToolTipText<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">super</span><span class="token punctuation">(</span>icon<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">setToolTipText</span><span class="token punctuation">(</span>strToolTipText<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token class-name">FgButton</span><span class="token punctuation">(</span><span class="token class-name">String</span> strToolTipText<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">setToolTipText</span><span class="token punctuation">(</span>strToolTipText<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="题2"><a href="#题2" class="headerlink" title="题2"></a>题2</h3><p>设计编写登录窗口，该应用程序维护一张记录合法用户名和密码的列表；只有合法的用户才能通过登录程序；需要实现：1）最多尝试3次；2）登录成功推出登录窗口；3）用户名或密码为空时，提示信息；4）用户名和密码错误时，清空密码，并将用户名选中；5）居中显示窗口。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestTextField</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token keyword">implements</span> <span class="token class-name">ActionListener</span><span class="token punctuation">{</span><span class="token class-name">JTextField</span> t0<span class="token punctuation">,</span>t1<span class="token punctuation">;</span><span class="token class-name">JButton</span> jb<span class="token punctuation">;</span><span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//构造函数</span><span class="token keyword">public</span> <span class="token class-name">TestTextField</span><span class="token punctuation">(</span><span class="token class-name">String</span> xTitle<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">super</span><span class="token punctuation">(</span>xTitle<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//为窗口设置名字</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置窗口大小</span><span class="token class-name">Container</span> c<span class="token operator">=</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获得窗口容器</span>c<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 为容器设置布局</span><span class="token comment">//用户名panel</span><span class="token class-name">JPanel</span> panel1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建小容器</span>panel1<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FlowLayout</span><span class="token punctuation">(</span><span class="token class-name">FlowLayout</span><span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置小容器的布局</span>panel1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"用户名:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//添加标签</span>t0<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JTextField</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>panel1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>t0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//添加输入框</span>c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>panel1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//把小容器放到大容器中</span><span class="token comment">//密码panel</span><span class="token class-name">JPanel</span> panel2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建小容器</span>panel2<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FlowLayout</span><span class="token punctuation">(</span><span class="token class-name">FlowLayout</span><span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置小容器的布局</span>panel2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"密    码:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//添加标签</span>t1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JPasswordField</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>panel2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//添加输入框</span>c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>panel2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//把小容器放到大容器中</span><span class="token comment">//登录按钮panel</span><span class="token class-name">JPanel</span> panel3<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建小容器</span>panel3<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FlowLayout</span><span class="token punctuation">(</span><span class="token class-name">FlowLayout</span><span class="token punctuation">.</span>RIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置小容器的布局</span>jb<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"登录"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>jb<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//注册监听者</span>panel3<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jb<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//添加按钮</span>c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>panel3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//把小容器放到大容器中</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置可见</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"cpt"</span><span class="token punctuation">,</span><span class="token number">123456</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//列表初始化</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"fpy"</span><span class="token punctuation">,</span><span class="token number">123456</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//接口函数实现</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>count<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">//测试次数减一</span><span class="token keyword">if</span><span class="token punctuation">(</span>count<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//若尝试次数超过3次</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你没机会了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">String</span> name<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">int</span> password<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token comment">//获得用户输入</span>name<span class="token operator">=</span>t0<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>password<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> ex<span class="token punctuation">)</span><span class="token punctuation">{</span>ex<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">String</span> message<span class="token operator">=</span><span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//用户名检验</span><span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>message<span class="token punctuation">,</span><span class="token string">"信息提示"</span><span class="token punctuation">,</span><span class="token class-name">JOptionPane</span><span class="token punctuation">.</span>INFORMATION_MESSAGE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出提示框</span><span class="token punctuation">}</span><span class="token comment">//检验用户函数</span><span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//使用Map内部接口Entry进行迭代</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> entry<span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token class-name">String</span> key <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> value <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token string">"用户名或密码为空,还有"</span> <span class="token operator">+</span> count <span class="token operator">+</span> <span class="token string">"次机会"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>password <span class="token operator">==</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    t1<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token string">"密码错误,还有"</span> <span class="token operator">+</span> count <span class="token operator">+</span> <span class="token string">"次机会"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        t1<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//清空密码</span>        <span class="token keyword">return</span> <span class="token string">"用户名是非法的,还有"</span> <span class="token operator">+</span> count <span class="token operator">+</span> <span class="token string">"次机会"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//测试函数</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">TestTextField</span> a<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">TestTextField</span><span class="token punctuation">(</span><span class="token string">"登入界面"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>大致效果是酱紫哒！</p><div align="center">![最终效果](https://github.com/Petr-Chan/tuchuang/raw/master/java_GUI.png)</div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> GUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java常用类实战</title>
      <link href="2020/06/05/java-chang-yong-lei-shi-zhan/"/>
      <url>2020/06/05/java-chang-yong-lei-shi-zhan/</url>
      
        <content type="html"><![CDATA[<h2 id="ArrayList类"><a href="#ArrayList类" class="headerlink" title="ArrayList类"></a>ArrayList类</h2><p>题：假设52张扑克牌（去掉大小王），实现随机洗牌操作，为参加游戏的人每人生成一手牌，每手牌的牌数是指定的，并将每个人分到的牌按花色排序后输出。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDealCard</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> numHands<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token keyword">int</span> cardsPerHand<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">;</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> suit<span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"♠"</span><span class="token punctuation">,</span><span class="token string">"♣"</span><span class="token punctuation">,</span><span class="token string">"♥"</span><span class="token punctuation">,</span><span class="token string">"♦"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rank<span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"A"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">,</span><span class="token string">"3"</span><span class="token punctuation">,</span><span class="token string">"4"</span><span class="token punctuation">,</span><span class="token string">"5"</span><span class="token punctuation">,</span><span class="token string">"6"</span><span class="token punctuation">,</span><span class="token string">"7"</span><span class="token punctuation">,</span><span class="token string">"8"</span><span class="token punctuation">,</span><span class="token string">"9"</span><span class="token punctuation">,</span><span class="token string">"10"</span><span class="token punctuation">,</span><span class="token string">"J"</span><span class="token punctuation">,</span><span class="token string">"Q"</span><span class="token punctuation">,</span><span class="token string">"K"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token class-name">List</span> deck <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>suit<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>rank<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>deck<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>suit<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>rank<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">shuffle</span><span class="token punctuation">(</span>deck<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>numHands<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">List</span> p<span class="token operator">=</span><span class="token function">dealCard</span><span class="token punctuation">(</span>deck<span class="token punctuation">,</span> cardsPerHand<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>deck<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span> <span class="token function">dealCard</span><span class="token punctuation">(</span><span class="token class-name">List</span> deck<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> deckSize<span class="token operator">=</span>deck<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span> handView<span class="token operator">=</span>deck<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span>deckSize<span class="token operator">-</span>n<span class="token punctuation">,</span> deckSize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span> hand<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span>handView<span class="token punctuation">)</span><span class="token punctuation">;</span>handView<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> hand<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="LinkList类"><a href="#LinkList类" class="headerlink" title="LinkList类"></a>LinkList类</h2><p>题：用LinkList写一个Stack的数据结构测试。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestStack</span> <span class="token punctuation">{</span><span class="token comment">//创建链表linkList</span><span class="token class-name">LinkedList</span> linkList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>linkList<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>linkList<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> linkList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> linkList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>linkList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> linkList<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token string">"栈内无数"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">TestStack</span> myStack<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">TestStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>myStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>myStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>myStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Vector类"><a href="#Vector类" class="headerlink" title="Vector类"></a>Vector类</h2><p>题：写一个简单的Vector测试。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestVector</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Vector</span> v<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"J"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"J"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"E"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"L"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"J"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> size<span class="token operator">=</span>v<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Size:"</span><span class="token operator">+</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>size<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题：演示一个简单的学生信息管理：利用向量记录实现学生管理，能支持学生对象的增加、删除操作，每个学生对象包括学号，性别，姓名。删除学生必须输入学生的学号。可以设计一个操作菜单，包括增加，删除，显示以及退出4项。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span><span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token keyword">long</span> stno<span class="token punctuation">;</span><span class="token class-name">String</span> sex<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">long</span> stno<span class="token punctuation">,</span><span class="token class-name">String</span> sex<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>stno<span class="token operator">=</span>stno<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>sex<span class="token operator">=</span>sex<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token string">"姓名:"</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">",学号:"</span><span class="token operator">+</span>stno<span class="token operator">+</span><span class="token string">",性别:"</span><span class="token operator">+</span>sex<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">&gt;</span></span> group<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>outer<span class="token operator">:</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">String</span> ch<span class="token operator">=</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string">"选择：1--增加，2--删除，3--显示，4--退出"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> choice<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">switch</span><span class="token punctuation">(</span>choice<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">inputStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span><span class="token keyword">long</span> stno<span class="token operator">=</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string">"请输入学号:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>group<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Student</span> x<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">)</span>group<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>stno<span class="token operator">==</span>stno<span class="token punctuation">)</span>group<span class="token punctuation">.</span><span class="token function">removeElement</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span><span class="token comment">//迭代输出Vector存储</span><span class="token class-name">Iterator</span> p<span class="token operator">=</span>group<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"==&gt;"</span><span class="token operator">+</span>p<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span><span class="token keyword">break</span> outer<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token class-name">String</span> hint<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">String</span> x<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token comment">//字符串输入</span><span class="token class-name">BufferedReader</span> br<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hint<span class="token punctuation">)</span><span class="token punctuation">;</span>x<span class="token operator">=</span>br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">return</span> x<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Student</span> <span class="token function">inputStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">String</span> name<span class="token operator">=</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string">"请输入姓名:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">long</span> stno<span class="token operator">=</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string">"请输入学号:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> sex<span class="token operator">=</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string">"请输入性别:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>stno<span class="token punctuation">,</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Map类"><a href="#Map类" class="headerlink" title="Map类"></a>Map类</h2><p>题：写一个测试映射集合的代码。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestTreeMap</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Map</span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"ccc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"aaa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"bbb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"d"</span><span class="token punctuation">,</span><span class="token string">"ddd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Iterator</span> iter<span class="token operator">=</span>map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Object</span> key<span class="token operator">=</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"tab key"</span><span class="token operator">+</span>key<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"value="</span><span class="token operator">+</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">TreeMap</span> tab<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">TreeMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tab<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"ccc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tab<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"aaa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tab<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"bbb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tab<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"d"</span><span class="token punctuation">,</span><span class="token string">"ddd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Iterator</span> iter2<span class="token operator">=</span>tab<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>iter2<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Object</span> key<span class="token operator">=</span>iter2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"map key"</span><span class="token operator">+</span>key<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"value="</span><span class="token operator">+</span>tab<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensorBoard实战</title>
      <link href="2020/06/05/tensorboard-shi-zhan/"/>
      <url>2020/06/05/tensorboard-shi-zhan/</url>
      
        <content type="html"><![CDATA[<p>今天我们来介绍一款机器学习中很实用的工具：TensorBoard。它之所以实用，主要是因为它将机器学习这一个类似黑盒的东西可视化出来，让用户对训练过程有一个更好的理解。下面就基于MNIST数据集来实战一下TensorBoard的使用方法。</p><hr><h2 id="TensorBoard可视化MNIST分类代码"><a href="#TensorBoard可视化MNIST分类代码" class="headerlink" title="TensorBoard可视化MNIST分类代码"></a>TensorBoard可视化MNIST分类代码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> keras<span class="token punctuation">.</span>layers <span class="token keyword">import</span> Input<span class="token punctuation">,</span> Dense<span class="token punctuation">,</span> Dropout<span class="token punctuation">,</span> Activation<span class="token punctuation">,</span> Conv2D<span class="token punctuation">,</span> MaxPool2D<span class="token punctuation">,</span> Flatten<span class="token keyword">from</span> keras<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> mnist<span class="token keyword">from</span> keras<span class="token punctuation">.</span>models <span class="token keyword">import</span> Model<span class="token keyword">from</span> keras<span class="token punctuation">.</span>utils <span class="token keyword">import</span> to_categorical<span class="token keyword">from</span> keras<span class="token punctuation">.</span>callbacks <span class="token keyword">import</span> TensorBoard<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment">#数据集处理</span>    data <span class="token operator">=</span> np<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">'mnist.npz'</span><span class="token punctuation">)</span>    x_train<span class="token punctuation">,</span> y_train <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">'x_train'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">'y_train'</span><span class="token punctuation">]</span>    x_test<span class="token punctuation">,</span> y_test <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">'x_test'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">'y_test'</span><span class="token punctuation">]</span>    x_train <span class="token operator">=</span> np<span class="token punctuation">.</span>expand_dims<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>    x_test <span class="token operator">=</span> np<span class="token punctuation">.</span>expand_dims<span class="token punctuation">(</span>x_test<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>    y_train<span class="token operator">=</span>to_categorical<span class="token punctuation">(</span>y_train<span class="token punctuation">,</span> num_classes<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    y_test<span class="token operator">=</span>to_categorical<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> num_classes<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>        <span class="token comment">#参数配置</span>    batch_size <span class="token operator">=</span><span class="token number">128</span>    epoch <span class="token operator">=</span> <span class="token number">10</span>    <span class="token comment"># 模型搭建</span>    inputs <span class="token operator">=</span> Input<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> Conv2D<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span> <span class="token punctuation">)</span><span class="token punctuation">(</span>inputs<span class="token punctuation">)</span>    x <span class="token operator">=</span> Conv2D<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    x <span class="token operator">=</span> MaxPool2D<span class="token punctuation">(</span>pool_size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    x <span class="token operator">=</span> Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    x <span class="token operator">=</span> Dense<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    x <span class="token operator">=</span> Dropout<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    x <span class="token operator">=</span> Dense<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'softmax'</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    model <span class="token operator">=</span> Model<span class="token punctuation">(</span>inputs<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token comment">#模型编译</span>    model<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>loss<span class="token operator">=</span><span class="token string">'categorical_crossentropy'</span><span class="token punctuation">,</span> optimizer<span class="token operator">=</span><span class="token string">'adam'</span><span class="token punctuation">,</span>metrics<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'acc'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#面板配置</span>    Tensorboard <span class="token operator">=</span> TensorBoard<span class="token punctuation">(</span>log_dir<span class="token operator">=</span><span class="token string">'.\model'</span><span class="token punctuation">,</span> histogram_freq<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> write_grads<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment">#log_dir保存目录</span><span class="token comment">#模型训练</span>    result <span class="token operator">=</span> model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> batch_size<span class="token operator">=</span>batch_size<span class="token punctuation">,</span> epochs<span class="token operator">=</span>epoch<span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> validation_split<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span>callbacks<span class="token operator">=</span><span class="token punctuation">[</span>Tensorboard<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#在回调函数中加入TensorBoard！</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="TensorBoard启动"><a href="#TensorBoard启动" class="headerlink" title="TensorBoard启动"></a>TensorBoard启动</h2><p>实际上，训练信息已经保存在TensorBoard配置的目录中了。下面进入当前*.py目录下的PowerShell，敲入</p><pre class="line-numbers language-none"><code class="language-none">tensorboard --logdir= XXX（前文中的model）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>PowerShell会反馈一个本地6006端口开放的提示信息。此时打开浏览器输入</p><pre class="line-numbers language-none"><code class="language-none">http://localhost:6006<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样就成功进入TensorBoard界面啦！</p><h2 id="TensorBoard配置"><a href="#TensorBoard配置" class="headerlink" title="TensorBoard配置"></a>TensorBoard配置</h2><p>我们上述实战例子中，我们只能够看到Loss和Acc的训练曲线，而其他信息是没有保存下来的。但世界上TensorBoard的可视化功能非常强大，目前可以支持一下7种可视化类别：</p><ol><li>SCALARS：展示训练过程中的准确率、损失值、权重/偏置的变化情况</li><li>IMAGES：展示训练过程中及记录的图像</li><li>AUDIO：展示训练过程中记录的音频</li><li>GRAPHS：展示模型的数据流图，以及各个设备上消耗的内存和时间</li><li>DISTRIBUTIONS：展示训练过程中记录的数据的分布图</li><li>HISTOGRAMS：展示训练过程中记录的数据的柱状图</li><li>EMBEDDINGS：展示词向量后的投影分布</li></ol><p>具体的参数配置后续再加~</p><h2 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h2><ol><li><a href="https://blog.csdn.net/fendouaini/article/details/80368770?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase">https://blog.csdn.net/fendouaini/article/details/80368770?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase</a></li><li><a href="https://blog.csdn.net/u010099080/article/details/77426577">https://blog.csdn.net/u010099080/article/details/77426577</a></li><li><a href="https://blog.csdn.net/hnwolfs/article/details/81122380?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-1">https://blog.csdn.net/hnwolfs/article/details/81122380?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-1</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Keras </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tensorboard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>screen常用命令</title>
      <link href="2020/06/05/screen-jiao-cheng/"/>
      <url>2020/06/05/screen-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>​    想必在Linux云服务器上跑过代码的同学都会有这样子的苦恼：我们通过SSH访问云服务器，将我们需要执行的代码在服务器上运行，但当你断开SSH连接后，你的代码也会随之停止运行。此时你可能开始寻找一种即使SSH离线也能让服务器运行目标代码的方法。这种方法确实存在，那就是下面提到的：screen（窗口）。这个东西实际上可以这样理解：我们通过SSH连接服务器，这时相当于开了一个主窗口。而我们关闭SSH连接后，这个主窗口也就关闭了，所以运行于主窗口的代码也就这样挂掉了。而通过screen操作相当于通过主窗口创建子窗口，主窗口湮灭了但子窗口还是存在的，所以将我们的目标代码放在子窗口运行便能够解决我们上述提到的无法离线运行的问题。</p><p>下面就介绍几种screen最常见的操作：</p><h2 id="screen创建"><a href="#screen创建" class="headerlink" title="screen创建"></a>screen创建</h2><pre class="line-numbers language-none"><code class="language-none">screen -S ###（窗口名）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="screen列表查看"><a href="#screen列表查看" class="headerlink" title="screen列表查看"></a>screen列表查看</h2><pre class="line-numbers language-none"><code class="language-none">screen -ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="screen恢复"><a href="#screen恢复" class="headerlink" title="screen恢复"></a>screen恢复</h2><pre class="line-numbers language-none"><code class="language-none">screen -r ###（窗口名）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="screen删除"><a href="#screen删除" class="headerlink" title="screen删除"></a>screen删除</h2><pre class="line-numbers language-none"><code class="language-none">screen -S ###(窗口名) -X quit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="screen恢复异常"><a href="#screen恢复异常" class="headerlink" title="screen恢复异常"></a>screen恢复异常</h2><pre class="line-numbers language-none"><code class="language-none">screen -d ###（窗口名）screen -r ###（窗口名）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="screen返回主窗口"><a href="#screen返回主窗口" class="headerlink" title="screen返回主窗口"></a>screen返回主窗口</h2><pre class="line-numbers language-none"><code class="language-none">Ctrl + A + D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> screen </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础练习</title>
      <link href="2020/06/01/java-chang-gui-cao-zuo/"/>
      <url>2020/06/01/java-chang-gui-cao-zuo/</url>
      
        <content type="html"><![CDATA[<p>时间之矢稍纵即逝，接近2周就要Java期末考了。作为一个一学期没怎么认真听Java课的我来说，内心波澜起伏。借着空余的时间，把Java的重点稍微总结了一下，下面就以涵盖全书的4个例子展开。</p><h3 id="题1-数组-："><a href="#题1-数组-：" class="headerlink" title="题1(数组)："></a>题1(数组)：</h3><p>使用Scanner输入n个数(小于100)，并将之升序输出。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> haha <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">Scanner</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> n <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span> xiang <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">float</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>xiang<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">nextFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>xiang<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>xiang<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="题2-继承-："><a href="#题2-继承-：" class="headerlink" title="题2(继承)："></a>题2(继承)：</h3><p>（1）编写一个圆类Circle，该类拥有：<br>①一个成员变量<br>Radius（私有，浮点型）；  // 存放圆的半径；<br>②两个构造方法<br>    Circle( )           // 将半径设为0<br>    Circle(double  r )         //创建Circle对象时将半径初始化为r<br>③ 三个成员方法<br>    double getArea( )       //获取圆的面积<br>    double getPerimeter( )   //获取圆的周长<br>     void  show( )          //将圆的半径、周长、面积输出到屏幕<br>（2）编写一个圆柱体类Cylinder，它继承于上面的Circle类。还拥有：<br>①一个成员变量<br>    double hight（私有，浮点型）；  // 圆柱体的高；<br>②构造方法<br>    Cylinder (double r, double  h )      //创建Circle对象时将半径初始化为r<br>③ 成员方法<br>    double getVolume( )             //获取圆柱体的体积<br>    void  showVolume( )             //将圆柱体的体积输出到屏幕<br>编写应用程序，创建类的对象，分别设置圆的半径、圆柱体的高，计算并分别显示圆半径、圆面积、圆周长，圆柱体的体积。</p><hr><p>Circle.java:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">double</span> <span class="token class-name">Radius</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Radius</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token keyword">double</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Radius</span><span class="token operator">=</span>r<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span>PI<span class="token operator">*</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token class-name">Radius</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPerimeter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token number">2</span><span class="token operator">*</span><span class="token class-name">Math</span><span class="token punctuation">.</span>PI<span class="token operator">*</span><span class="token class-name">Radius</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"圆半径："</span><span class="token operator">+</span><span class="token class-name">Radius</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"圆面积："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"圆周长:"</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPerimeter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>Cylinder.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Cylinder</span> <span class="token keyword">extends</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">double</span> hight<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">Cylinder</span><span class="token punctuation">(</span><span class="token keyword">double</span> r<span class="token punctuation">,</span><span class="token keyword">double</span> h<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">super</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>hight <span class="token operator">=</span> h<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getVolume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>hight<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showVolume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"圆柱体体积："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getVolume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Cylinder</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cylinder</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>obj<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>obj<span class="token punctuation">.</span><span class="token function">showVolume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="题3-抽象类"><a href="#题3-抽象类" class="headerlink" title="题3(抽象类)"></a>题3(抽象类)</h3><p>1.设计Person抽象类，具有年龄、性别、体重、身高等属性，其中年龄、性别为一般方法，体重、身高为抽象方法；</p><p>2.在Person抽象类基础上，进一步派生Teacher类，包含工号、系别等信息；</p><p>3.设计Teacher测试运行例子，输出相应信息。</p><hr><p>Person.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span><span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">setWeight</span><span class="token punctuation">(</span><span class="token keyword">double</span> weight<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token keyword">double</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>Teacher.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Teacher</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span><span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token class-name">String</span> sex<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">double</span> weight<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">double</span> height<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token class-name">String</span> document<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token class-name">String</span> number<span class="token punctuation">;</span><span class="token class-name">Teacher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>age <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>sex <span class="token operator">=</span> <span class="token string">"x"</span><span class="token punctuation">;</span>document <span class="token operator">=</span> <span class="token string">"xxx"</span><span class="token punctuation">;</span>number <span class="token operator">=</span> <span class="token string">"xxxx"</span><span class="token punctuation">;</span>height <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>weight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setWeight</span><span class="token punctuation">(</span><span class="token keyword">double</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>weight <span class="token operator">=</span> w<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token keyword">double</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>height <span class="token operator">=</span> h<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>age <span class="token operator">=</span> a<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>    sex <span class="token operator">=</span> s<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setDocument</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>    document <span class="token operator">=</span> s<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>    number <span class="token operator">=</span> s<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"teacher"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"age:"</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"sex:"</span><span class="token operator">+</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"height:"</span><span class="token operator">+</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"weight:"</span><span class="token operator">+</span>weight<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"doucument:"</span><span class="token operator">+</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"number:"</span><span class="token operator">+</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//测试</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Teacher</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Teacher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">setSex</span><span class="token punctuation">(</span><span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">183.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">setWeight</span><span class="token punctuation">(</span><span class="token number">42.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">setDocument</span><span class="token punctuation">(</span><span class="token string">"自动化"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token string">"1801"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="题4-接口-："><a href="#题4-接口-：" class="headerlink" title="题4(接口)："></a>题4(接口)：</h3><ol><li>   设计Person接口，具有获取和设置年龄、性别、体重、身高等属性的方法</li><li>   设计Teacher类实现Person接口，包含工号、系别等信息；实现信息输出功能；</li><li>   设计Student类实现Person接口，包含学号信息；实现输出功能；</li><li>   设计Student、Tercher测试运行类，体现接口的应用</li></ol><hr><p>Person.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span><span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">getaAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span><span class="token class-name">String</span> sex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> <span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token keyword">double</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setWeight</span><span class="token punctuation">(</span><span class="token keyword">double</span> <span class="token class-name">W</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> <span class="token function">getWeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>Teacher.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Teacher</span> <span class="token keyword">implements</span> <span class="token class-name">Person</span><span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token class-name">String</span> sex<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token class-name">String</span> document<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token class-name">String</span> number<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">double</span> height<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">double</span> weight<span class="token punctuation">;</span><span class="token class-name">Teacher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>sex<span class="token operator">=</span><span class="token string">"x"</span><span class="token punctuation">;</span>document<span class="token operator">=</span><span class="token string">"xxx"</span><span class="token punctuation">;</span>number<span class="token operator">=</span><span class="token string">"xxxx"</span><span class="token punctuation">;</span>height<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>weight<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>age <span class="token operator">=</span>a<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> age<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>sex <span class="token operator">=</span> s<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> sex<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token keyword">double</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>height<span class="token operator">=</span>h<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> height<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setWeight</span><span class="token punctuation">(</span><span class="token keyword">double</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>weight <span class="token operator">=</span> w<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getWeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> weight<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDocument</span><span class="token punctuation">(</span><span class="token class-name">String</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>document<span class="token operator">=</span>d<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token class-name">String</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>number <span class="token operator">=</span> n<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> number<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> document<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"teacher"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"----------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"age:"</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"sex:"</span><span class="token operator">+</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"height:"</span><span class="token operator">+</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"weight:"</span><span class="token operator">+</span>weight<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"number:"</span><span class="token operator">+</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"document:"</span><span class="token operator">+</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Teacher</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Teacher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"age:"</span><span class="token operator">+</span>t<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">setSex</span><span class="token punctuation">(</span><span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"sex:"</span><span class="token operator">+</span>t<span class="token punctuation">.</span><span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">123.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"heght:"</span><span class="token operator">+</span>t<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还剩下Student类，就…就自行解决吧！毕竟道理都是相通的啦！</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>conda常用命令</title>
      <link href="2020/05/29/conda-cao-zuo/"/>
      <url>2020/05/29/conda-cao-zuo/</url>
      
        <content type="html"><![CDATA[<p>conda可以说是每个学习python的人都应该了解的。当我们安装python包，或者创建环境的时候都会和它打交道。为了帮助大家对conda有一个更好的了解，下面总结了一些关于conda的命令行操作。主要是关于conda换源问题以及conda虚拟环境操作问题。那下面就开始吧！.0.0.</p><hr><h2 id="window环境下"><a href="#window环境下" class="headerlink" title="window环境下"></a>window环境下</h2><h3 id="conda查包"><a href="#conda查包" class="headerlink" title="conda查包"></a>conda查包</h3><pre class="line-numbers language-none"><code class="language-none">conda list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="conda配置情况查询"><a href="#conda配置情况查询" class="headerlink" title="conda配置情况查询"></a>conda配置情况查询</h3><pre class="line-numbers language-none"><code class="language-none">conda info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="conda换源"><a href="#conda换源" class="headerlink" title="conda换源"></a>conda换源</h3><pre class="line-numbers language-none"><code class="language-none">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/conda config --set show_channel_urls yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="conda换回默认源"><a href="#conda换回默认源" class="headerlink" title="conda换回默认源"></a>conda换回默认源</h3><pre class="line-numbers language-none"><code class="language-none">conda config --remove-key channels<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="conda虚拟环境创建"><a href="#conda虚拟环境创建" class="headerlink" title="conda虚拟环境创建"></a>conda虚拟环境创建</h3><pre class="line-numbers language-none"><code class="language-none">conda create -n your_env_name python=X.X<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="conda虚拟环境激活"><a href="#conda虚拟环境激活" class="headerlink" title="conda虚拟环境激活"></a>conda虚拟环境激活</h3><pre class="line-numbers language-none"><code class="language-none">activate your_env_name(虚拟环境名称)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="conda查询环境信息"><a href="#conda查询环境信息" class="headerlink" title="conda查询环境信息"></a>conda查询环境信息</h3><pre class="line-numbers language-none"><code class="language-none">conda env list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="conda关闭虚拟环境"><a href="#conda关闭虚拟环境" class="headerlink" title="conda关闭虚拟环境"></a>conda关闭虚拟环境</h3><pre class="line-numbers language-none"><code class="language-none">deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="conda删除虚拟环境"><a href="#conda删除虚拟环境" class="headerlink" title="conda删除虚拟环境"></a>conda删除虚拟环境</h3><pre class="line-numbers language-none"><code class="language-none">conda remove -n your_env_name(虚拟环境名称) --all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="conda删除虚拟环境中的某些包"><a href="#conda删除虚拟环境中的某些包" class="headerlink" title="conda删除虚拟环境中的某些包"></a>conda删除虚拟环境中的某些包</h3><pre class="line-numbers language-none"><code class="language-none">conda remove --name your_env_name  package_name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Linux环境下"><a href="#Linux环境下" class="headerlink" title="Linux环境下"></a>Linux环境下</h2><p>如果与windows环境下操作方式相同的，则以下不再赘述。</p><h3 id="conda虚拟环境激活-1"><a href="#conda虚拟环境激活-1" class="headerlink" title="conda虚拟环境激活"></a>conda虚拟环境激活</h3><pre class="line-numbers language-none"><code class="language-none">source activate your_env_name(虚拟环境名称)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="conda关闭虚拟环境-1"><a href="#conda关闭虚拟环境-1" class="headerlink" title="conda关闭虚拟环境"></a>conda关闭虚拟环境</h3><pre class="line-numbers language-none"><code class="language-none">source deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="conda换源-1"><a href="#conda换源-1" class="headerlink" title="conda换源"></a>conda换源</h3><p>在终端输入：</p><pre class="line-numbers language-none"><code class="language-none">vim ~/.condarc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样就进入了conda源的配置文件了。下面（选择其一就好）将文件改为：</p><p>清华源：</p><pre class="line-numbers language-none"><code class="language-none">channels:  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/ssl_verify: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>中科大源：</p><pre class="line-numbers language-none"><code class="language-none">channels:  - https://mirrors.ustc.edu.cn/anaconda/pkgs/main/  - https://mirrors.ustc.edu.cn/anaconda/pkgs/free/  - https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/ssl_verify: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上交源：</p><pre class="line-numbers language-none"><code class="language-none">channels:  - https://mirrors.sjtug.sjtu.edu.cn/anaconda/pkgs/main/  - https://mirrors.sjtug.sjtu.edu.cn/anaconda/pkgs/free/  - https://mirrors.sjtug.sjtu.edu.cn/anaconda/cloud/conda-forge/ssl_verify: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考文献：</p><p><a href="https://zhuanlan.zhihu.com/p/87123943">https://zhuanlan.zhihu.com/p/87123943</a></p><p><a href="https://blog.csdn.net/sean2100/article/details/80998643">https://blog.csdn.net/sean2100/article/details/80998643</a></p><p><a href="https://blog.csdn.net/lyy14011305/article/details/59500819">https://blog.csdn.net/lyy14011305/article/details/59500819</a></p><p><a href="https://blog.csdn.net/weixin_34613450/article/details/87457631">https://blog.csdn.net/weixin_34613450/article/details/87457631</a></p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> conda命令行 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
